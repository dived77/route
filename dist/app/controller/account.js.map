{"version":3,"sources":["../../../app/controller/account.js"],"names":["_","require","utility","validator","Controller","UserController","ctx","service","config","user_name","params","name","user","getUserByLoginName","status","message","query","author_id","_id","opt","limit","sort","Promise","all","topic","getTopicsByQuery","reply","getRepliesByAuthorId","recent_topics","replies","topic_ids","Set","map","topic_id","toString","slice","$in","recent_replies","sortBy","indexOf","url","token","active","is_admin","md5","email","pass","session_secret","render","pageTitle","loginname","getUsersByQuery","is_star","stars","is_block","tops","users","page","Number","list_topic_count","pages","Math","ceil","collect_topic_count","skip","topicCollect","getTopicCollectsByUserId","collects","ids","doc","topics","current_page","getCountByQuery","all_topics_count","getCountByAuthorId","count","id","getUserById","request","save","success","msg","data","isSuccess","body","location","signature","weibo","accessToken","error","showMessage","action","trim","redirect","oldPass","old_pass","newPass","new_pass","equal","helper","bcompare","newPassHash","bhash","user_id","model","Topic","update","$set","deleted","multi","Reply","$pull","ups","module","exports"],"mappings":"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","file":"account.js","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst utility = require('utility');\nconst validator = require('validator');\nconst Controller = require('egg').Controller;\n\nclass UserController extends Controller {\n\n  async index() {\n    const { ctx, service, config } = this;\n    const user_name = ctx.params.name;\n    const user = await ctx.service.user.getUserByLoginName(user_name);\n    if (!user) {\n      ctx.status = 404;\n      ctx.message = '这个用户不存在。';\n      return;\n    }\n\n    let query = { author_id: user._id };\n    const opt = { limit: 5, sort: '-create_at' };\n    const [\n      recent_topics, replies,\n    ] = await Promise.all([\n      service.topic.getTopicsByQuery(query, opt),\n      service.reply.getRepliesByAuthorId(user._id, { limit: 20, sort: '-create_at' }),\n    ]);\n\n    // 只显示最近5条\n    const topic_ids = [ ...new Set(replies.map(reply => reply.topic_id.toString())) ].slice(0, 5);\n\n    query = { _id: { $in: topic_ids } };\n    let recent_replies = await service.topic.getTopicsByQuery(query, {});\n\n    recent_replies = _.sortBy(recent_replies, topic => {\n      return topic_ids.indexOf(topic._id.toString());\n    });\n\n    user.url = (() => {\n      if (user.url && user.url.indexOf('http') !== 0) {\n        return 'http://' + user.url;\n      }\n      return user.url;\n    })();\n\n    // 如果用户没有激活，那么管理员可以帮忙激活\n    let token = '';\n    if (!user.active && ctx.user && ctx.user.is_admin) {\n      token = utility.md5(user.email + user.pass + config.session_secret);\n    }\n\n    await ctx.render('user/index', {\n      user,\n      recent_topics,\n      recent_replies,\n      token,\n      pageTitle: `@${user.loginname} 的个人主页`,\n    });\n  }\n\n  async listStars() {\n    const { ctx, service } = this;\n    const stars = await service.user.getUsersByQuery({ is_star: true }, {});\n    await ctx.render('user/stars', { stars });\n  }\n\n  async top100() {\n    const { ctx, service } = this;\n    const opt = { limit: 100, sort: '-score' };\n    const tops = await service.user.getUsersByQuery({ is_block: false }, opt);\n    await ctx.render('user/top100', {\n      users: tops,\n      pageTitle: 'top100',\n    });\n  }\n\n  async listCollectedTopics() {\n    const { ctx, service } = this;\n    const name = ctx.params.name;\n    const page = Number(ctx.query.page) || 1;\n    const limit = this.config.list_topic_count;\n\n    const user = await service.user.getUserByLoginName(name);\n\n    if (!user) {\n      ctx.status = 404;\n      ctx.message = '这个用户不存在。';\n      return;\n    }\n\n    const pages = Math.ceil(user.collect_topic_count / limit);\n    const opt = { skip: (page - 1) * limit, limit };\n\n    const collects = await service.topicCollect.getTopicCollectsByUserId(user._id, opt);\n    const ids = collects.map(doc => {\n      return doc.topic_id.toString();\n    });\n\n    const query = { _id: { $in: ids } };\n    let topics = await service.topic.getTopicsByQuery(query, {});\n    topics = _.sortBy(topics, topic => {\n      return ids.indexOf(topic._id.toString());\n    });\n\n    await ctx.render('user/collect_topics', {\n      topics,\n      current_page: page,\n      pages,\n      user,\n    });\n  }\n\n  async listTopics() {\n    const { ctx, service, config } = this;\n    const user_name = ctx.params.name;\n    const page = Number(ctx.query.page) || 1;\n    const limit = config.list_topic_count;\n\n    const user = await service.user.getUserByLoginName(user_name);\n\n    if (!user) {\n      ctx.status = 404;\n      ctx.message = '这个用户不存在。';\n      return;\n    }\n\n    const query = { author_id: user._id };\n    const opt = { skip: (page - 1) * limit, limit, sort: '-create_at' };\n    const [ topics, all_topics_count ] = await Promise.all([\n      service.topic.getTopicsByQuery(query, opt),\n      service.topic.getCountByQuery(query),\n    ]);\n    const pages = Math.ceil(all_topics_count / limit);\n\n    await ctx.render('user/topics', {\n      user,\n      topics,\n      current_page: page,\n      pages,\n    });\n  }\n\n  async listReplies() {\n    const { ctx, service } = this;\n    const user_name = ctx.params.name;\n    const page = Number(ctx.query.page) || 1;\n    const limit = 50;\n\n    const user = await service.user.getUserByLoginName(user_name);\n    if (!user) {\n      ctx.status = 404;\n      ctx.message = '这个用户不存在。';\n      return;\n    }\n\n    const opt = { skip: (page - 1) * limit, limit, sort: '-create_at' };\n    const replies = await service.reply.getRepliesByAuthorId(user._id, opt);\n    const topic_ids = [ ...new Set(replies.map(reply => {\n      return reply.topic_id.toString();\n    })) ];\n    // 获取所有有评论的主题\n    const query = { _id: { $in: topic_ids } };\n    let topics = await service.topic.getTopicsByQuery(query, {});\n    topics = _.sortBy(topics, topic => {\n      return topic_ids.indexOf(topic._id.toString());\n    });\n    const count = await service.reply.getCountByAuthorId(user._id);\n    const pages = Math.ceil(count / limit);\n\n    await ctx.render('user/replies', {\n      user,\n      topics,\n      current_page: page,\n      pages,\n    });\n  }\n\n  async showSetting() {\n    const { ctx, service } = this;\n    const id = ctx.user._id;\n    const user = await service.user.getUserById(id);\n\n    if (ctx.request.query.save === 'success') {\n      user.success = '保存成功。';\n    }\n\n    return await ctx.render('user/setting', { user, pageTitle: '设置' });\n  }\n\n  async setting() {\n    const { ctx, service } = this;\n    // 显示出错或成功信息\n    async function showMessage(msg, data, isSuccess) {\n      data = data || ctx.request.body;\n      const user = {\n        loginname: data.loginname,\n        email: data.email,\n        url: data.url,\n        location: data.location,\n        signature: data.signature,\n        weibo: data.weibo,\n        accessToken: data.accessToken,\n      };\n\n      if (isSuccess) {\n        user.success = msg;\n      } else {\n        user.error = msg;\n      }\n\n      return await ctx.render('user/setting', { user });\n    }\n\n    // post\n    const { body } = ctx.request;\n    const action = body.action;\n    if (action === 'change_setting') {\n      const url = validator.trim(body.url);\n      const location = validator.trim(body.location);\n      const weibo = validator.trim(body.weibo);\n      const signature = validator.trim(body.signature);\n\n      const user = await service.user.getUserById(ctx.user._id);\n      user.url = url;\n      user.location = location;\n      user.signature = signature;\n      user.weibo = weibo;\n      await user.save();\n      return ctx.redirect('/setting?save=success');\n    }\n\n    if (action === 'change_password') {\n      const oldPass = validator.trim(body.old_pass);\n      const newPass = validator.trim(body.new_pass);\n      if (!oldPass || !newPass) {\n        return showMessage('旧密码或新密码不得为空');\n      }\n\n      const user = await service.user.getUserById(ctx.user._id);\n      const equal = ctx.helper.bcompare(oldPass, user.pass);\n      if (!equal) {\n        return showMessage('当前密码不正确。', user);\n      }\n\n      const newPassHash = ctx.helper.bhash(newPass);\n      user.pass = newPassHash;\n      await user.save();\n      return showMessage('密码已被修改。', user, true);\n    }\n  }\n\n  async toggleStar() {\n    const { ctx, service } = this;\n    const user_id = ctx.request.body.user_id;\n\n    const user = await service.user.getUserById(user_id);\n    user.is_star = !user.is_star;\n    await user.save();\n    ctx.body = { status: 'success' };\n    return;\n  }\n\n  async block() {\n    const { ctx, service } = this;\n    const action = ctx.request.body.action;\n    const loginname = ctx.params.name;\n    const user = await service.user.getUserByLoginName(loginname);\n\n    if (action === 'set_block') {\n      user.is_block = true;\n      await user.save();\n      ctx.body = { status: 'success' };\n    } else if (action === 'cancel_block') {\n      user.is_block = false;\n      await user.save();\n      ctx.body = { status: 'success' };\n    }\n  }\n\n  async deleteAll() {\n    const { ctx, service } = this;\n    const loginname = ctx.params.name;\n    const user = await service.user.getUserByLoginName(loginname);\n\n    // 删除主题\n    await ctx.model.Topic.update({ author_id: user._id }, { $set: { deleted: true } }, { multi: true });\n    // 删除评论\n    await ctx.model.Reply.update({ author_id: user._id }, { $set: { deleted: true } }, { multi: true });\n    // 点赞数也全部干掉\n    await ctx.model.Reply.update({}, { $pull: { ups: user._id } }, { multi: true });\n    ctx.body = { status: 'success' };\n  }\n}\n\nmodule.exports = UserController;\n"]}